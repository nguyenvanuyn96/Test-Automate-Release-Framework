name: "Auto Upgrade Podspec Version"

on: create

jobs:
  upgrade_podspec:
    runs-on: ubuntu-latest
    steps:

    - name: 1. Checkout
      uses: actions/checkout@master
        
    - name: 2. Get and check if branch name is an `release/*`
      uses: uynguyen-wonderlabs/get-branch-name-github-action@master
      id: get-branch
      with:
          branch: ${{ github.ref }}
        
    - name: 3. Get release version only
      if: ${{ steps.get-branch.outputs.is_release_branch =='YES' }}
      id: get-release-version
      run: |
          version=$(echo ${{ github.ref }} | sed -e "s/refs\/heads\/release\///g")
          echo "::set-output name=new_release_version::${version}"
          echo "The detected release version = ${version}"

    - name: 4. Create bot branch
      if: ${{ steps.get-branch.outputs.is_release_branch =='YES' }}
      id: create_bot_branch
      run: |
          bot_branch="bot/${{ steps.get-branch.outputs.branch }}"
          echo "::set-output name=bot_branch::${bot_branch}"
          git checkout -b ${bot_branch}

    - name: 5. Find and replace the current spec version to new version
      if: ${{ steps.get-branch.outputs.is_release_branch =='YES' }}
      id: find_and_replace
      uses: shitiomatic/str-replace@master
      with:
          find: "\\t*s.version\\s*=\\s\"[\\S]*\""
          replace: "s.version      = \"${{ steps.get-release-version.outputs.new_release_version }}\""
          include: ".podspec"
    
    - name: 6. Check result of Find and replace
      if: ${{ steps.get-branch.outputs.is_release_branch =='YES' }}
      run: |
          echo "Number of files which have been modified = ${{ steps.find_and_replace.outputs.modifiedFiles}}"
           
    - name: 7. Commit and Push changes
      if: ${{ steps.get-branch.outputs.is_release_branch =='YES' }}
      uses: dciborow/commit@master
      with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push-branch: ${{ steps.create_bot_branch.outputs.bot_branch }}
          commit-message: "Upgrade podspec version to ${{ steps.get-release-version.outputs.new_release_version }}"
          force-add: 'true'
          force-push: 'true'
          name: "automate-bot"
          email: "automate-bot@sph.com.sg"

    - name: 8. Create pull request
      if: ${{ steps.get-branch.outputs.is_release_branch =='YES' }}
      id: create_pr
      uses: thomaseizinger/create-pull-request@master
      with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          head: ${{ steps.create_bot_branch.outputs.bot_branch }}
          base: ${{ steps.get-branch.outputs.branch }}
          title: "[Bot] Upgrade podspec version to ${{ steps.get-release-version.outputs.new_release_version }}"

    - name: 9. Auto approve release branch
      if: ${{ steps.get-branch.outputs.is_release_branch =='YES' }}
      uses: juliangruber/approve-pull-request-action@v1
      with:
          github-token: ${{ secrets.NGUYENVANUYN96_WORKFLOW_SECRET }}
          number: "${{ steps.create_pr.outputs.number }}"

    - name: 10. Merge approved PR
      if: ${{ steps.get-branch.outputs.is_release_branch =='YES' }}
      uses: sudo-bot/action-pull-request-merge@v1.1.1
      with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.create_pr.outputs.number }}

    - name: 11. Create pull request for release branch into master
      if: ${{ steps.get-branch.outputs.is_release_branch =='YES' }}
      id: create_release_pr
      uses: thomaseizinger/create-pull-request@master
      with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          head: ${{ steps.get-branch.outputs.branch }}
          base: "master"
          draft: "true"
          title: "[DO NOT MERGE] Release ${{ steps.get-release-version.outputs.new_release_version }}"
          body: |
              # Description
              <!--Please include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.-->
              Merge for release version ${{ steps.get-release-version.outputs.new_release_version }}
              
              ## Jira tickets
              <!--Please list your relevant jira tickets here.-->

              - NA

              ## Checklist
              <!--**Before submitting a pull request,** please make sure the following is done:-->

              - [ ] Ensure the test passes 
              - [ ] Rebase your branch on to `master/` branch.

              ## What type of PR is this?
              <!--Please delete options that are not relevant.-->

              - [x] Bug fix (non-breaking change which fixes an issue)
              - [x] New feature (non-breaking change which adds functionality)
              - [x] Chore (Minor changes, refactor code, ...)
              - [x] Documentation Update

              ## Related libraries
              <!--Please list your related module PRs.-->

              - NA

              ## QA Instructions, Screenshots
              <!--_Please replace this line with instructions on how to test your changes, as well as any relevant images for UI changes._-->

              - NA

