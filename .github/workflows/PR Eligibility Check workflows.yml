name: PR Eligibility Check
on: 
    workflow_dispatch:
        inputs:
            source_branch:
                description: 'The source branch. Ex: release/1.0.0'     
                required: true
                default: ''
            base_branch:
                description: 'The target branch. Ex: master'
                required: true
                default: ''

    pull_request:
        branches: 
            - master
            - hotfix/*
            - release/*
            - develop
        types:
            - opened
            - reopened
            - edited
            - synchronize
jobs:
  pr_eligibility_check:
    if: ${{ github.event.pull_request.merged == false }}
    runs-on: ubuntu-latest
    steps:

    - name: 1. Try to get branch name of PR
      if: ${{ github.event.inputs.base_branch == '' }} # If this workflow is triggered by an event which is not a workflow_dispatch
      uses: andrevalentin/get-branch-name-by-pr@master
      id: pr_data
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        pr-id: ${{ github.event.pull_request.number }}
        
    - name: 1.1. Print branch name for debugging
      if: ${{ github.event.inputs.base_branch == '' }} # If this workflow is triggered by an event which is not a workflow_dispatch
      run: |
        echo "This is PR from branch ${{ steps.pr_data.outputs.branch }}"
        echo "This is PR into branch ${{ github.base_ref }}"
      
    - name: 2. Check rule
      run: |
        base_branch=${{ github.base_ref }}
        source_branch=${{ steps.pr_data.outputs.branch }}

        if [ -z "$base_branch" ] && [ -z "$source_branch" ]; then # If this workflow is triggered by a workflow_dispatch
            base_branch=${{ github.event.inputs.base_branch }}
            source_branch=${{ github.event.inputs.source_branch }}
        fi;

        is_valid_pr=0
        error_message=""

        if [ $base_branch == "master" ]; then
            if [ $(echo ${source_branch} | sed -e "s/^release\/[0-9]*\.[0-9]*\.[0-9]*//g") != ${source_branch} ]; then
                is_valid_pr=1
            elif [ $(echo ${source_branch} | sed -e "s/^release\/iphone\/[0-9]*\.[0-9]*\.[0-9]*//g") != ${source_branch} ]; then
                is_valid_pr=1
            elif [ $(echo ${source_branch} | sed -e "s/^release\/ipad\/[0-9]*\.[0-9]*\.[0-9]*//g") != ${source_branch} ]; then
                is_valid_pr=1
            elif [ $(echo ${source_branch} | sed -e "s/^hotfix\/[0-9]*\.[0-9]*\.[0-9]*//g") != ${source_branch} ]; then
                is_valid_pr=1
            elif [ $(echo ${source_branch} | sed -e "s/^hotfix\/iphone\/[0-9]*\.[0-9]*\.[0-9]*//g") != ${source_branch} ]; then
                is_valid_pr=1
            elif [ $(echo ${source_branch} | sed -e "s/^hotfix\/ipad\/[0-9]*\.[0-9]*\.[0-9]*//g") != ${source_branch} ]; then
                is_valid_pr=1
            else
                error_message="The \`master\` branch only accept a pull request from the valid \`release/*\` or \`hotfix/*\` or \`release/iphone/*\` or \`release/ipad/*\` or \`hotfix/iphone/*\` or \`hotfix/ipad/*\` branch. Please double check the branch name and correct it from your side!!!"
            fi;
        elif [ $base_branch == "develop" ]; then
            if [ $(echo ${source_branch} | sed -e "s/^release\/[0-9]*\.[0-9]*\.[0-9]*//g") != ${source_branch} ]; then
                is_valid_pr=1
            elif [ $(echo ${source_branch} | sed -e "s/^release\/iphone\/[0-9]*\.[0-9]*\.[0-9]*//g") != ${source_branch} ]; then
                is_valid_pr=1
            elif [ $(echo ${source_branch} | sed -e "s/^release\/ipad\/[0-9]*\.[0-9]*\.[0-9]*//g") != ${source_branch} ]; then
                is_valid_pr=1
            elif [ $(echo ${source_branch} | sed -e "s/^hotfix\/[0-9]*\.[0-9]*\.[0-9]*//g") != ${source_branch} ]; then
                is_valid_pr=1
            elif [ $(echo ${source_branch} | sed -e "s/^hotfix\/iphone\/[0-9]*\.[0-9]*\.[0-9]*//g") != ${source_branch} ]; then
                is_valid_pr=1
            elif [ $(echo ${source_branch} | sed -e "s/^hotfix\/ipad\/[0-9]*\.[0-9]*\.[0-9]*//g") != ${source_branch} ]; then
                is_valid_pr=1
            elif [ $(echo ${source_branch} | sed -e "s/^feature\///g") != ${source_branch} ]; then
                is_valid_pr=1
            elif [ $(echo ${source_branch} | sed -e "s/^bugfix\///g") != ${source_branch} ]; then
                is_valid_pr=1
            elif [ -z "$(echo ${source_branch} | sed -e "s/^bot\/release\/[0-9]*\.[0-9]*\.[0-9]*\/develop//g")" ]; then
                is_valid_pr=1
            elif [ -z "$(echo ${source_branch} | sed -e "s/^bot\/release\/iphone\/[0-9]*\.[0-9]*\.[0-9]*\/develop//g")" ]; then
                is_valid_pr=1
            elif [ -z "$(echo ${source_branch} | sed -e "s/^bot\/release\/ipad\/[0-9]*\.[0-9]*\.[0-9]*\/develop//g")" ]; then
                is_valid_pr=1
            elif [ -z "$(echo ${source_branch} | sed -e "s/^bot\/hotfix\/[0-9]*\.[0-9]*\.[0-9]*\/develop//g")" ]; then
                is_valid_pr=1
            elif [ -z "$(echo ${source_branch} | sed -e "s/^bot\/hotfix\/iphone\/[0-9]*\.[0-9]*\.[0-9]*\/develop//g")" ]; then
                is_valid_pr=1
            elif [ -z "$(echo ${source_branch} | sed -e "s/^bot\/hotfix\/ipad\/[0-9]*\.[0-9]*\.[0-9]*\/develop//g")" ]; then
                is_valid_pr=1
            else
                error_message="The \`develop\` branch only accept a pull request from the valid \`release/*\` or \`hotfix/*\` or \`release/iphone/*\` or \`release/ipad/*\` or \`hotfix/iphone/*\` or \`hotfix/ipad/*\` or \`feature/*\` or \`bugfix/*\` branch. Please double check the branch name and correct it from your side!!!"
            fi;
        elif [ -z "${base_branch##hotfix/*}" ]; then
            if [ $(echo ${source_branch} | sed -e "s/^bugfix\///g") != ${source_branch} ]; then
                is_valid_pr=1
            elif [ -z "$(echo ${source_branch} | sed -e "s/^bot\/hotfix\/[0-9]*\.[0-9]*\.[0-9]*//g")" ]; then
                is_valid_pr=1
            elif [ -z "$(echo ${source_branch} | sed -e "s/^bot\/hotfix\/iphone\/[0-9]*\.[0-9]*\.[0-9]*//g")" ]; then
                is_valid_pr=1
            elif [ -z "$(echo ${source_branch} | sed -e "s/^bot\/hotfix\/ipad\/[0-9]*\.[0-9]*\.[0-9]*//g")" ]; then
                is_valid_pr=1
            else
                error_message="The \`hotfix/*\` or \`hotfix/iphone/*\` or \`hotfix/ipad/*\` branch only accept a pull request from the only valid \`bugfix/*\` branch. Please double check the branch name and correct it from your side!!!"
            fi;
        elif [ -z "${base_branch##release/*}" ]; then
            if [ $(echo ${source_branch} | sed -e "s/^bugfix\///g") != ${source_branch} ]; then
                is_valid_pr=1
            elif [ - z "$(echo ${source_branch} | sed -e "s/^bot\/release\/[0-9]*\.[0-9]*\.[0-9]*//g")" ]; then
                is_valid_pr=1
            elif [ - z "$(echo ${source_branch} | sed -e "s/^bot\/release\/iphone\/[0-9]*\.[0-9]*\.[0-9]*//g")" ]; then
                is_valid_pr=1
            elif [ - z "$(echo ${source_branch} | sed -e "s/^bot\/release\/ipad\/[0-9]*\.[0-9]*\.[0-9]*//g")" ]; then
                is_valid_pr=1
            else
                error_message="The \`release/*\` or \`release/iphone/*\` or \`release/ipad/*\` branch only accept a pull request from the only valid \`bugfix/*\` branch. Please double check the branch name and correct it from your side!!!"
            fi;
        fi;  

        echo "is_valid_pr = $is_valid_pr"

        if [ $is_valid_pr == 0 ]; then
            echo "Message: [Error] The PR is not valid!"
            echo "Reason: $error_message"
            exit 1
        else
            echo "Message: The PR is valid"
            exit 0
        fi

    - name: 3. Checkout source_branch
      if: ${{ always() && github.event.inputs.base_branch != '' }}  # If this workflow is triggered by a workflow_dispatch event
      uses: actions/checkout@master
      with:
          ref: "${{ github.event.inputs.source_branch }}"

    - name: 4. Get latest commit hash of the source branch
      if: ${{ always() && github.event.inputs.base_branch != '' }} # If this workflow is triggered by a workflow_dispatch event
      id: get_source_commit
      run: |
          commit_hash=$(git log --format="%H" -n 1)

          echo "::set-output name=commit_hash::${commit_hash}"

    - name: 5. Set commit status if needed  # If this workflow is triggered by a workflow_dispatch event then we need to run set commit status because github action won't updating the commit status of a workflow_dispatch. Ref here: https://github.community/t/workflow-dispatch-does-not-update-commit-status/125981
      if: ${{ always() && github.event.inputs.base_branch != '' }}
      uses: Sibz/github-status-action@v1.1.2
      with: 
          authToken: ${{secrets.GITHUB_TOKEN}}
          context: 'pr_eligibility_check'
          description: "${{ job.status }}"
          state: "${{ job.status }}"
          sha: ${{ steps.get_source_commit.outputs.commit_hash }}
