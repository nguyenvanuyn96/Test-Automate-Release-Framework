name: PR Eligibility Check
on: 
  pull_request:
    branches: 
      - master
      - hotfix/*
      - release/*
      - develop

    types:
      - opened
      - reopened
      - edited
      - synchronize

jobs:
  pr_eligibility_check:
    if: ${{ github.event.pull_request.merged == false }}
    runs-on: ubuntu-latest
    steps:

    - name: 1. Get branch name of PR
      uses: andrevalentin/get-branch-name-by-pr@master
      id: pr_data
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        pr-id: ${{ github.event.pull_request.number }}
        
    - name: 1.1. Print branch name for debugging
      run: |
        echo "This is PR from branch ${{ steps.pr_data.outputs.branch }}"
        echo "This is PR into branch ${{ github.base_ref }}"
      
    - name: 2. Check rule
      run: |
        base_branch=${{ github.base_ref }}
        source_branch=${{ steps.pr_data.outputs.branch }}
        is_valid_pr=0
        error_message=""

        if [ $base_branch == "master" ]; then
            if [ $(echo ${source_branch} | sed -e "s/^release\///g") != ${source_branch} ]; then
                is_valid_pr=1
            elif [ $(echo ${source_branch} | sed -e "s/^hotfix\///g") != ${source_branch} ]; then
                is_valid_pr=1
            else
                error_message="The \`master\` branch only accept a pull request from the valid \`release/*\` or \`hotfix/*\` branch. Please double check the branch name and correct it from your side!!!"
            fi;
        elif [ $base_branch == "develop" ]; then
            if [ $(echo ${source_branch} | sed -e "s/^release\///g") != ${source_branch} ]; then
                is_valid_pr=1
            elif [ $(echo ${source_branch} | sed -e "s/^hotfix\///g") != ${source_branch} ]; then
                is_valid_pr=1
            elif [ $(echo ${source_branch} | sed -e "s/^feature\///g") != ${source_branch} ]; then
                is_valid_pr=1
            elif [ $(echo ${source_branch} | sed -e "s/^bugfix\///g") != ${source_branch} ]; then
                is_valid_pr=1
            elif [ $(echo ${source_branch} | sed -e "s/^bot\/release\/\[0-9\]+\.\[0-9\]+\.\[0-9\]+\/develop//g") != ${source_branch} ]; then
                is_valid_pr=1
            elif [ $(echo ${source_branch} | sed -e "s/^bot\/hotfix\/\[0-9\]+\.\[0-9\]+\.\[0-9\]+\/develop//g") != ${source_branch} ]; then
                is_valid_pr=1
            else
                error_message="The \`develop\` branch only accept a pull request from the valid \`release/*\` or \`hotfix/*\` or \`feature/*\` or \`bugfix/*\` branch. Please double check the branch name and correct it from your side!!!"
            fi;
        elif [ -z "${base_branch##hotfix/*}" ]; then
            if [ $(echo ${source_branch} | sed -e "s/^bugfix\///g") != ${source_branch} ]; then
                is_valid_pr=1
            elif [ $(echo ${source_branch} | sed -e "s/^bot\/hotfix\/\[0-9\]+\.\[0-9\]+\.\[0-9\]+//g") != ${source_branch} ]; then
                is_valid_pr=1
            else
                error_message="The \`hotfix/*\` branch only accept a pull request from the only valid \`bugfix/*\` branch. Please double check the branch name and correct it from your side!!!"
            fi;
        elif [ -z "${base_branch##release/*}" ]; then
            if [ $(echo ${source_branch} | sed -e "s/^bugfix\///g") != ${source_branch} ]; then
                is_valid_pr=1
            elif [ $(echo ${source_branch} | sed -e "s/^bot\/release\/\[0-9\]+\.\[0-9\]+\.\[0-9\]+//g") != ${source_branch} ]; then
                is_valid_pr=1
            else
                error_message="The \`release/*\` branch only accept a pull request from the only valid \`bugfix/*\` branch. Please double check the branch name and correct it from your side!!!"
            fi;
        fi;  

        echo "is_valid_pr = $is_valid_pr"

        if [ $is_valid_pr == 0 ]; then
            echo "Message: [Error] The PR is not valid!"
            echo "Reason: $error_message"
            exit 1
        else
            echo "Message: The PR is valid"
            exit 0
        fi
